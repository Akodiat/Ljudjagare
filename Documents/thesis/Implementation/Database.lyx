#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% increases link area for cross-references and autoname them
\AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
\addto\extrasenglish{%
 \renewcommand*{\equationautorefname}[1]{}
 \renewcommand{\sectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
 \renewcommand{\figureautorefname}{Fig.\negthinspace}
 \renewcommand{\tableautorefname}{Tab.\negthinspace}
}

% in case somebody want to have the label "Equation"
%\renewcommand{\eqref}[1]{Equation~(\negthinspace\autoref{#1})}

% that links to image floats jumps to the beginning
% of the float and not to its caption
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% makes caption labels bold
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enables calculations
\usepackage{calc}

% fancy page header/footer settings
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increases the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoids that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage,fleqn
\use_default_options true
\master ../Implementation.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch NoChildDocument
\selected 0
\filename_suffix 0
\color #ff0000
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chaptername
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thechapter
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rightmark
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Enable page headers and add the chapter to the header line.
\end_layout

\end_inset


\end_layout

\begin_layout Right Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftmark
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Left Footer
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset Argument
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Database: Design and Implementation
\end_layout

\begin_layout Standard
This Subsection describes how the database was designed and implemented
 into the application to allow the information of the users running sessions
 be stored in a proper way so that it can be retrieved and used at another
 time.
 The section takes up both the system that manages the functionality of
 the database as well as a visual representation of the design and the tables
 that tables it consists of.
\end_layout

\begin_layout Subsection
Database management system
\end_layout

\begin_layout Standard
The Database Management System (DBMS) is the system used for the application
 to communicate with the database.
 It makes the necessary request to the database using Structured Query Language
 (SQL).
 The DBMS handles request such as adding or retrieving data from the database.
 
\end_layout

\begin_layout Standard
The database that was implemented uses the DBMS SQLite, it is a public domain
 system that is supported for use in Android development.
 Since SQLite requires no human support it is well suitable when implementing
 an embedded database for portable devices 
\begin_inset CommandInset citation
LatexCommand cite
key "sqlite"

\end_inset

.
 An embedded database means that the database is stored locally on the device
 that it is running on, this implies taht the user will only be able to
 review their running history from their own device and application.
\end_layout

\begin_layout Standard
The database is implemented by making a java class that inherits the SQLite
 library, then methods have been created to do operations to the database.
 These methods contains the appropriate SQL-queries that are executed on
 the database.
 For example if the application wants to add a object to the database it
 calls a method from our DBMS that takes the object as an argument, this
 method executes the appropriate SQL-query to the database to add a row
 to the appropriate table.
 
\end_layout

\begin_layout Subsection
The design of the database
\end_layout

\begin_layout Standard
An ER-Diagram (See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Database:-Relational-model"

\end_inset

) was used to visualize how the database should be implemented into the
 application.
 The ER-Diagram helped to keep track on what the different elements of the
 database consists of as well as how the relate to each other.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/erdia.png
	width 100text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "er-dia"

\end_inset

The implemented database represented by an ER-diagram.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The implemented database is centered around the entity “Route” (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "er-dia"

\end_inset

).
 A route is basically the users running session, it contains a unique identifier
 and the date that the route started.
 Also the route saves data of the number of coins that was generated for
 the route, this number is set by the user in the settings menu before the
 running session.
 The “Point” entity represents a specific location of the users route and
 is noticeably different by the double border, this means that the entity
 is a weak entity.
 A weak entity is dependent on another entity to exist 
\begin_inset CommandInset citation
LatexCommand cite
after " ch. 4.4"
key "database2009"

\end_inset

 in our case a point can not exist without being connected to a route.
 In practice the weak entity in our database is that the point table has
 an additional column with the route that is connected to the point.
 This allows retrieval of all the points that is connected to a specific
 route.
 Each point stores data about the location of the user at the time that
 the point was added, that is latitude and latitude, as well as the timestamp,
 and a unique ID.
 The “Coin” entity works in a similar fashion as the point but it stores
 data of each of the collected coins.
 When a coin is collected it is stored in the database as a unique id with
 the distance and time that the user had run when it was collected.
 
\end_layout

\begin_layout Standard
The “FinishedRoute” entity also differs from the other entities because
 of the “ISA” relationship to the route.
 This relation can be read as “FinishedRoute is a Route”, this means that
 a finished route inherit each of the attributes that the route has.
 When a route is finished we store it in the FinishedRoute table along with
 the total time and distance of the route.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/tabeller.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "table-1"

\end_inset

Visualisation of the tables in the database.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand ref
reference "table-1"

\end_inset

 is a visualization of how the tables in the database could look with some
 data in them.
 The column in the points and coins table named “R.ID” (red/blue lines) represent
s which route that the row is associated with.
 This is how the supporting relationships that are represented with double
 borders in 
\begin_inset CommandInset ref
LatexCommand ref
reference "er-dia"

\end_inset

 was implemented.
 We can also see that the finished routes are stored in a table with the
 additional data about time and distance.
 
\end_layout

\begin_layout Subsection
Using the data
\end_layout

\begin_layout Standard
The purpose of the database is that it should be possible to recreate a
 previously saved route in the future.
 By extracting the latitudes and longitudes that are associated to the route
 from the Point table we can draw the path that the user ran on a map.
 Distance and time is retrieved from the FinishedRoute table and with that
 information we can calculate the average speed and pace that the user ran
 in.
 With the locations from the Coin table we can draw the coins on the map
 with the path to see exactly where every coin was collected.
 The information in the Coin table is used to display the exact time and
 distance for when the user retrieved each coin.
 Since all the the routes are stored with the date that they were created
 on, a neat list is easily displayed for the user to brows through their
 running history.
\end_layout

\begin_layout Standard
With this information the user can for example view their average speed
 from some weeks ago or if the user got a specially good randomized route
 he/she can view the route on the map to enjoy it once more.
\end_layout

\end_body
\end_document
