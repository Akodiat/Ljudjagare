#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% increases link area for cross-references and autoname them
\AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
\addto\extrasenglish{%
 \renewcommand*{\equationautorefname}[1]{}
 \renewcommand{\sectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
 \renewcommand{\figureautorefname}{Fig.\negthinspace}
 \renewcommand{\tableautorefname}{Tab.\negthinspace}
}

% in case somebody want to have the label "Equation"
%\renewcommand{\eqref}[1]{Equation~(\negthinspace\autoref{#1})}

% that links to image floats jumps to the beginning
% of the float and not to its caption
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% makes caption labels bold
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enables calculations
\usepackage{calc}

\newcommand{\app}{Run For Life}

% fancy page header/footer settings
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increases the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoids that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage,fleqn
\use_default_options true
\master ../Implementation.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chaptername
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thechapter
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rightmark
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Enable page headers and add the chapter to the header line.
\end_layout

\end_inset


\end_layout

\begin_layout Right Header
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftmark
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Left Footer
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Sound in an Android application
\end_layout

\begin_layout Standard
The application programming interfaces (APIs) provided by Android as a part
 of the Software Development Kit (SDK) provides several classes for handling
 audio, like AudioTrack, MediaPlayer and SoundPool.
 However, none of these currently provides any support for 3D audio operations
 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk_beginners_guide"

\end_inset

.
 To use binaural audio effects in an Android application, one needs to access
 operations that are not available in the SDK.
 Fortunately, Android provides an API for accessing low level functions
 called Native Development Kit (NDK) 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk"

\end_inset

.
 
\end_layout

\begin_layout Standard
Android’s NDK allows developers to implement part of an application using
 other languages than Java, such as C.
 The use of low-level languages does not generally result in better performance
 and on top of it, it also increases the application’s complexity 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk"

\end_inset

.
 However, it enables developers to use operations that are not accessible
 using only Java - such as handling 3D audio.
 Currently, there seem to be two APIs available providing this functionality:
 OpenSL ES and OpenAL Soft --- both using general HRTFs 
\begin_inset CommandInset citation
LatexCommand cite
key "opensl"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "openal"

\end_inset

.
\end_layout

\begin_layout Subsection
Spatial audio in an Android application
\end_layout

\begin_layout Standard
OpenSL ES is a cross-platform API that enables audio functionality in native
 applications on multimedia devices 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk_beginners_guide"

\end_inset

.
 It has been part of Android’s NDK since version 2.3 and is divided into
 three different profiles: game, music and phone.
 For a phone to take advantage of the functions provided by such a profile,
 it needs to have an appropriate compilation.
 The only profile enabling functions to spatially position audio is the
 game mode 
\begin_inset CommandInset citation
LatexCommand cite
key "opensl"

\end_inset

.
 There is very little information available on what phones supports what
 profile.
 In Android Beginner’s Guide (2012) the author mentions that no devices
 supports the game profile at the time the book was written.
 
\end_layout

\begin_layout Standard
OpenAL Soft is another API that enables the creation of spatial sound environmen
ts independent on the soundcard setup 
\begin_inset CommandInset citation
LatexCommand cite
key "openal"

\end_inset

.
 As a result, it eliminates the problem with programmers having to write
 different code to each device because of each soundcard supporting different
 instructions.
 It is licensed under GNU Lesser General Public License, meaning that one
 can freely include it in software --- even for proprietary (closed source)
 and commercial use 
\begin_inset CommandInset citation
LatexCommand cite
key "lgpl"

\end_inset

.
 Unlike OpenSL ES, OpenAL Soft is not part of the NDK provided by Android.
 To access its functions it is necessary to interact with code written in
 another language than Java.
 
\end_layout

\begin_layout Standard
Because of OpenSL being mostly unsupported, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
app
\backslash

\end_layout

\end_inset

 was developed using OpenAL and OpenAl4Android as audio core.
 OpenAL4Android is a small library provided by Martien Pielot that serves
 as an intermediary between the native OpelAL Soft code and the Java application
 
\begin_inset CommandInset citation
LatexCommand cite
key "openal_android"

\end_inset

.
\end_layout

\begin_layout Subsection
Feedback to the user
\end_layout

\begin_layout Standard
Before going into detail, it might be worth quickly describing how the spatial
 positioning of the audio is determined in our application.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Generation-of-random"

\end_inset

, it is described how points can be generated on a map using GPS technology.
 As the user is moving, their angular offset in terms of such a generated
 point can be calculated using Sensor fusion (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Sensor-fusion"

\end_inset

), varying from -180° to 180°.
 An angular offset of 0° would hence mean that the user is moving perfectly
 in the right direction.
 With regards to the study in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Human-Computer-Interaction-using"

\end_inset

, showing that virtual sounds positioned above or below the listener are
 difficult to localize, vertical sound movements has not been taken into
 account when developing the audio core of the application.
 
\end_layout

\begin_layout Standard
The sound instructing the user in what direction to move is a pure sine
 wave synthesized in 
\emph on
Propellerhead Reason 7
\emph default
.
 Sine waves are generally seen as boring and uninteresting sounds, making
 a good fit for applications like 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
app
\backslash

\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "sine_reference"

\end_inset

.
 Apart from from being completely free of modulations on frequency and amplitude
, it does not contain overtones.
 It is in a sense 
\begin_inset Quotes eld
\end_inset

pure
\begin_inset Quotes erd
\end_inset

.
 Since the user should be focusing on the direction of which the sound is
 appearing from (panoration), it would make sense for the sound itself to
 be as neutral as possible.
 Taking advantage of the 3D audio functionality provided by the OpenAL Soft
 API, the sine wave is positioned around the user's head using the angular
 offset previously mentioned.
 For example, a sound with an angular offset of -90° would appear to come
 from the left, while 130° would appear to come from four o'clock.
 
\end_layout

\begin_layout Standard
As mentioned in the theory chapter, non-individualized HRTFs suffer from
 back-front confusion.
 It would be risky to rely single-handedly on the 3D properties of HRTFs
 in an application depending entirely on the directional properties of its
 audio.
 For that reason, some other factors were introduced apart from the spatial
 panoration to make it easier to navigate correctly:
\end_layout

\begin_layout Paragraph
Pitch
\end_layout

\begin_layout Standard
When the user moves, the pitch of the sound changes depending on the angular
 offset; the bigger the offset, the lower the pitch.
 A lower pitch essentially means a lower frequency, assuming that the sound
 is distinguishable from noise 
\begin_inset CommandInset citation
LatexCommand cite
key "ne"

\end_inset

.
 It makes the sound appear to be darker.
 On the contrary, the sound will become brighter as the user is facing the
 generated point.
 
\end_layout

\begin_layout Paragraph
Rate
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Human-Computer-Interaction-using"

\end_inset

 it was mentioned that using sound level as a cue is not recommended.
 To inform the user about the current distance to the generated point, a
 short sine wave is repeated throughout the run.
 The length of the interval between each repetition depends on the distance
 to the point; the sound will repeat faster the closer to the point the
 user is.
 Both the change in pitch and change in rate can be related to recommendations
 seen in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Human-Computer-Interaction-using"

\end_inset

.
\end_layout

\begin_layout Standard
Apart from the sound being modulated in previously mentioned ways, the sine
 wave is sometimes completely exchanged to another sound.
 If the user is moving in the correct direction, with an offset of maximum
 20 degrees, an electronic beat is played to indicate they are heading straight
 towards the generated point.
 If the user is running in the wrong direction, however, the sine wave is
 exchanged to a sound informing the user they are doing so.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sound_table"

\end_inset

 contains a simple visual representation of how the sound is modulated in
 360°, with the top being right ahead.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Figures/wadawd.png
	lyxscale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sound_table"

\end_inset

The three different sound stages
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
