#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% increases link area for cross-references and autoname them
\AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
\addto\extrasenglish{%
 \renewcommand*{\equationautorefname}[1]{}
 \renewcommand{\sectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
 \renewcommand{\figureautorefname}{Fig.\negthinspace}
 \renewcommand{\tableautorefname}{Tab.\negthinspace}
}

% in case somebody want to have the label "Equation"
%\renewcommand{\eqref}[1]{Equation~(\negthinspace\autoref{#1})}

% that links to image floats jumps to the beginning
% of the float and not to its caption
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% makes caption labels bold
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enables calculations
\usepackage{calc}

% fancy page header/footer settings
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increases the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoids that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage,fleqn
\use_default_options true
\master ../Implementation.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chaptername
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thechapter
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rightmark
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Enable page headers and add the chapter to the header line.
\end_layout

\end_inset


\end_layout

\begin_layout Right Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftmark
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Left Footer
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset Argument
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Sound in an Android application
\end_layout

\begin_layout Standard
The application programming interfaces (APIs) provided by Android as a part
 of the Software Development Kit (SDK) provides several classes for handling
 audio, like AudioTrack, MediaPlayer and SoundPool.
 However, none of these currently provides any support for 3D audio operations
 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk_beginners_guide"

\end_inset

.
 To use binaural audio effects in an Android application, one needs to access
 operations that aren’t available in the SDK.
 Fortunately, Android provides an API for accessing low level functions
 called Native Development Kit (NDK) 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk"

\end_inset

.
 
\end_layout

\begin_layout Standard
Android’s NDK allows developers to implement part of an application using
 other languages than Java, such as C.
 The use of low-level languages doesn’t generally result in better performance
 and on top of it, it also increases the application’s complexity 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk"

\end_inset

.
 However, it enables developers to use operations that aren’t accessible
 using only Java - such as handling 3D audio.
 Currently, there seems to be two APIs available providing this functionality:
 OpenSL ES and Open AL.
\end_layout

\begin_layout Subsection
Spatial audio using external libraries
\end_layout

\begin_layout Standard
OpenSL ES is a cross-platform API that enables audio functionality in native
 applications on multimedia devices 
\begin_inset CommandInset citation
LatexCommand cite
key "ndk_beginners_guide"

\end_inset

.
 It’s been part of Android’s NDK since version 2.3 and is divided into three
 different profiles: game, music and phone.
 For a phone to take advantage of the functions provided by such a profile,
 it needs to have an appropriate compilation.
 The only profile enabling functions to spatially position audio is the
 game mode 
\begin_inset CommandInset citation
LatexCommand cite
key "opensl"

\end_inset

.
 There is very little information available on what phones supports what
 profile.
 In Android Beginner’s Guide (2012) the author mentions that no devices
 supports the game profile at the time the book was written.
 
\end_layout

\begin_layout Standard
OpenAL is, just like OpenSL ES, an API that enables the creation of spatial
 sound environments independent on the soundcard setup.
 As a result it eliminates the problem with programmers having to write
 different code to each device because of each soundcard supporting different
 instructions.
 It's currently 
\end_layout

\begin_layout Standard
The OpenAL version we used has been adapted to Android by Martins Mozeiko
 and Chris Robinson.
 They have patched the code to make it work on Android.
 (http://repo.or.cz/w/openal-soft/android.git) To make it easier to access
 native functions we are using a small library provided by Martien Pielot,
 called OpenAL4Android (http://pielot.org/2011/11/10/openal4android-2/).
 It serves as an intermediary between the native OpelAL code and our Java
 application and contains all methods necessary to create a binaural environment.
 Apart from moving the sound source in three dimensions, it’s also possible
 to move the ‘listener’, meaning where in the 3D space the listener is supposed
 to interpret the audio signal from.
 
\end_layout

\begin_layout Standard
Our sound sources places in the 3D environment are static (since that’s
 how our application works).
 The only thing getting updated as the user is moving is the angle of the
 ‘listener’ to sound source.
 
\end_layout

\begin_layout Subsection
Feedback to the user
\end_layout

\begin_layout Standard
To communicate with the user, the application takes advantage of the 3D
 audio funcionality provided by the OpenAL API.
 
\end_layout

\begin_layout Standard
Depending on where on the map a sound source is placed, a virtual such 
\end_layout

\begin_layout Standard
Using the 3D audio functionality provided by OpenAL, the application's.
 The sound instructing the user in what direction to move is a pure sine
 wave, synthesized in Propellerhead Reason 7.
\end_layout

\begin_layout Standard
meaning its amplitude is non-changing.
 Neither does it contain It does not contain any overtones, it is completely
 steady in terms of volume and is, xxx, a rather uninteresting sound .
\end_layout

\begin_layout Standard
As mentioned in the theory chapter, non-invidualised HRTFs suffer from back-fron
t confusion.
 It would therefore be risky to rely single-handedly on the 3D properties
 of HRTFs in an application depending entirely on the directional properties
 of its audio.
 
\end_layout

\begin_layout Standard
BILD PÅ HUR LJUDET ÄR FÖRDELAT
\end_layout

\end_body
\end_document
